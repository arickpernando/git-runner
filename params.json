{"tagline":"","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"GitRunner","body":"# GitRunner\r\n\r\nGitRunner is a ruby framework to implement and run tasks after code has been pushed to a Git repository. It works by invoking `git-runner` through `hooks/post-update` in your remote Git repository.\r\n\r\nConfiguration for GitRunner is read from a pre-determined file within the repository (at this time, that file is config/deploy.rb but this will soon be configurable). Any instructions detected are then processed and ran.\r\n\r\nInstructions are contained within `lib/git-runner/instructions`, though soon these will be extracted out to separate gems, leaving only the core instructions present. Currently the only *real* instruction that users will want to run is Deploy, which will checkout your code, run bundler and perform a cap deploy (with multistage support).\r\n\r\n## Installation\r\n\r\n    $ gem install git-runner\r\n\r\n## Usage\r\n\r\nSymlink `hooks/post-update` to `git-runner`, or if `post-update` is already in use modify it to run `git-runner` with the arguments supplied to the hook.\r\n\r\n## TODO\r\n\r\n* Allow file based configuration (currently configuration is hard-coded)\r\n* Extract our non-core instruction functionality into individual gems (e.g. the Deploy instruction)\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n"}